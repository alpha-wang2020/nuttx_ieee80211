############################################################################
# net/uip/Make.defs
#
#   Copyright (C) 2007, 2009-2010, 2014 Gregory Nutt. All rights reserved.
#   Author: Gregory Nutt <gnutt@nuttx.org>
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with the
#    distribution.
# 3. Neither the name NuttX nor the names of its contributors may be
#    used to endorse or promote products derived from this software
#    without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
# COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
# OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
# AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
############################################################################

ifeq ($(CONFIG_NET),y)

# Common IP source files

NET_CSRCS += uip_initialize.c uip_setipid.c uip_input.c uip_send.c
NET_CSRCS += uip_poll.c uip_chksum.c uip_callback.c

# Non-interrupt level support required?

ifeq ($(CONFIG_NET_NOINTS),y)
NET_CSRCS += uip_lock.c
endif

# IPv6-specific logic

ifeq ($(CONFIG_NET_IPv6),y)
NET_CSRCS += uip_neighbor.c
endif

# TCP/IP source files

ifeq ($(CONFIG_NET_TCP),y)

NET_CSRCS += uip_tcpconn.c uip_tcpseqno.c uip_tcppoll.c uip_tcptimer.c
NET_CSRCS += uip_tcpsend.c uip_tcpinput.c uip_tcpappsend.c uip_listen.c
NET_CSRCS += uip_tcpcallback.c uip_tcpbacklog.c

# TCP Buffering

ifeq ($(CONFIG_NET_TCP_READAHEAD),y)
NET_CSRCS += uip_tcpreadahead.c
endif

ifeq ($(CONFIG_NET_TCP_WRITE_BUFFERS),y)
NET_CSRCS += uip_tcpwrbuffer.c
endif

endif

# UDP source files

ifeq ($(CONFIG_NET_UDP),y)

NET_CSRCS += uip_udpconn.c uip_udppoll.c uip_udpsend.c uip_udpinput.c
NET_CSRCS += uip_udpcallback.c

endif

# Include uip build support

DEPPATH += --dep-path uip
VPATH += :uip
CFLAGS += ${shell $(INCDIR) $(INCDIROPT) "$(CC)" $(TOPDIR)$(DELIM)net$(DELIM)uip}

endif
